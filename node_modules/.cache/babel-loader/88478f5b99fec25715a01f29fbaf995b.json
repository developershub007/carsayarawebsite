{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nimport _imports_0 from '@/assets/images/flutter_admotors_logo.png';\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"flex flex-row items-center no-underline text-black\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"me-2 w-8 sm:w-10 my-auto\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Placeholder\",\n  class: \"rounded-md w-auto sm:h-10 h-8 cursor-pointer object-cover\",\n  width: \"50px\",\n  height: \"50px\",\n  src: _imports_0\n})], -1);\n\nconst _hoisted_4 = {\n  class: \"ms-2 mt-1 text-sm flex-grow\"\n};\nconst _hoisted_5 = {\n  class: \"flex\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ps_label = _resolveComponent(\"ps-label\");\n\n  return $data.notify ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    id: \"notification-box\",\n    class: \"flex items-center w-mobile sm:w-median lg:w-64 justify-between leading-none lg:px-2 py-1 px-1 bg-primary-000 dark:bg-primaryDark-black rounded-t-xl lg:rounded-t-2xl top-0 fixed\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.clicked($data.flag))\n  }, [_createElementVNode(\"a\", {\n    href: \"#\",\n    id: \"notification-close\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.closed()),\n    title: \"close\"\n  }, \"x\"), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"p\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, [_createVNode(_component_ps_label, {\n    class: \"truncate lg:text-sm text-xs font-medium\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($data.title), 1)]),\n    _: 1\n  })]), _createVNode(_component_ps_label, {\n    class: \"font-medium text-xxs lg:text-xs\",\n    textColor: \"text-secondary-400 dark:text-secondaryDark-grey\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($data.subject), 1)]),\n    _: 1\n  })])])])])) : _createCommentVNode(\"\", true);\n}","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Documents\\SwaggyCars\\carsayara.com\\src\\components\\core\\notificationbox\\PsNotificationBox.vue"],"names":[],"mappings":";OAMwI,U,MAA+C,2C;;;;;AAFtK,EAAA,KAAK,EAAC;;;gCACP,mBAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAAqC,C,aACjC,mBAAA,CAAqK,KAArK,EAAqK;AAAhK,EAAA,GAAG,EAAC,aAA4J;AAA9I,EAAA,KAAK,EAAC,2DAAwI;AAA5E,EAAA,KAAK,EAAC,MAAsE;AAA/D,EAAA,MAAM,EAAC,MAAwD;AAAjD,EAAA,GAA+C,EAA/C;AAAiD,CAArK,CADiC,CAArC,E,EAAA,C;;;AAIG,EAAA,KAAK,EAAC;;;AACC,EAAA,KAAK,EAAC;;;;;SATjB,KAAA,CAAA,M,kBAAX,mBAAA,CAgBM,KAhBN,EAgBM,UAhBN,EAgBM,CAfF,mBAAA,CAcM,KAdN,EAcM;AAdD,IAAA,EAAE,EAAC,kBAcF;AAdqB,IAAA,KAAK,EAAC,kLAc3B;AAdgN,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,QAAA,CAAA,OAAA,CAAQ,KAAA,CAAA,IAAR,CAAF;AAcrN,GAdN,E,CACI,mBAAA,CAAyE,GAAzE,EAAyE;AAAtE,IAAA,IAAI,EAAC,GAAiE;AAA7D,IAAA,EAAE,EAAC,oBAA0D;AAApC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,QAAA,CAAA,MAAA,EAAF,CAA+B;AAAnB,IAAA,KAAK,EAAC;AAAa,GAAzE,EAAoE,GAApE,C,EACA,mBAAA,CAWM,KAXN,EAAA,UAAA,EAWM,CAVF,UAUE,EANF,mBAAA,CAKI,GALJ,EAAA,UAAA,EAKI,CAJA,mBAAA,CAEO,MAFP,EAAA,UAAA,EAEO,CADH,YAAA,CAAiF,mBAAjF,EAAiF;AAAvE,IAAA,KAAK,EAAC;AAAiE,GAAjF,EAAyD;sBAAG,MAAS,C,kCAAP,KAAA,CAAA,K,GAAK,C,CAAE,C,CAAZ;;AAAA,GAAzD,CACG,CAFP,CAIA,EADA,YAAA,CAAyI,mBAAzI,EAAyI;AAA/H,IAAA,KAAK,EAAC,iCAAyH;AAArF,IAAA,SAAS,EAAC;AAA2E,GAAzI,E;sBAAiH,MAAW,C,kCAAT,KAAA,CAAA,O,GAAO,C,CAAE,C;;GAA5H,CACA,CALJ,CAME,CAXN,C,CAFJ,CAeE,CAhBN,C","sourcesContent":["<template>\n    <div v-if=\"notify\"> \n        <div id=\"notification-box\" class=\"flex items-center w-mobile sm:w-median lg:w-64 justify-between leading-none lg:px-2 py-1 px-1  bg-primary-000 dark:bg-primaryDark-black rounded-t-xl lg:rounded-t-2xl top-0 fixed\" @click=\"clicked(flag)\">\n            <a href=\"#\" id=\"notification-close\" @click=\"closed()\" title=\"close\">x</a>\n            <div class=\"flex flex-row items-center no-underline text-black\">\n                <div class=\"me-2 w-8 sm:w-10 my-auto\">\n                    <img alt=\"Placeholder\" class=\"rounded-md w-auto sm:h-10 h-8 cursor-pointer object-cover\" width=\"50px\" height=\"50px\" src=\"@/assets/images/flutter_admotors_logo.png\" >\n                </div>\n                \n                <p class=\"ms-2 mt-1 text-sm flex-grow\">\n                    <span class=\"flex\">\n                        <ps-label class=\"truncate lg:text-sm text-xs font-medium\" > {{title}} </ps-label>\n                    </span>\n                    <ps-label class=\" font-medium text-xxs lg:text-xs \" textColor=\"text-secondary-400 dark:text-secondaryDark-grey\"> {{subject}}  </ps-label>\n                </p>\n            </div>\n        </div> \n    </div>\n \n</template>\n\n<script>\nimport firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nimport router from '@/router';\nimport PsLabel from '@/components/core/label/PsLabel.vue';\nimport { createProductProviderState } from '@/store/modules/item/ProductProvider';\nimport { PsValueProvider } from '@/store/modules/core/PsValueProvider';\nimport PsConst from '@/object/constant/ps_constants';\n\nexport default {\n    name: \"PsNotificationBox\",\n\n    components: {\n        PsLabel\n    },\n \n    data() {\n        \n        return {\n            title: \"Test\",\n            subject: \"Test\",\n            flag: \"Test\",\n            messaging: firebase.messaging.isSupported() ? firebase.messaging() : null,\n            currentMessage: \"Test\",\n            requireInteraction: true,\n            notify: false,\n        };\n    },\n\n    methods: {\n        closed(){\n            this.notify = false;\n        },\n        async clicked(value){\n            if(value == 'fe_broadcast') {\n                router.push({ name : \"notification-list\"});\n            }\n            if(value == 'review') {\n                router.push({name : 'review-list', query: { user_id: localStorage.loginUserId } });\n            }\n            if(value == 'chat' || value == 'bought') {\n                const itemProvider = createProductProviderState();\n                const psValueHolder = PsValueProvider.psValueHolder;\n                const loginUserId = psValueHolder.getLoginUserId();\n                const itemId = this.currentMessage.data.item_id;\n                const item = await itemProvider.loadItem(itemId, loginUserId);\n                let chatFlag = PsConst.CHAT_FROM_BUYER.toString();\n                if(loginUserId == this.currentMessage.data.buyer_id){\n                    chatFlag = PsConst.CHAT_FROM_SELLER.toString();\n                }\n                \n                router.push({\n                    name : 'chat', \n                    query: { \n                        buyer_user_id : this.currentMessage.data.buyer_id,\n                        seller_user_id : this.currentMessage.data.seller_id,\n                        item_name : item.data.title ,\n                        item_id : this.currentMessage.data.item_id,\n                        item_image_name : item.data.defaultPhoto.imgPath,\n                        item_price : item.data.price,\n                        currency : item.data.itemCurrency.currencySymbol,\n                        condition : item.data.conditionOfItem.name,\n                        chat_flag : chatFlag\n\n                    }\n                });\n            }\n            if(value == \"subscribe\") {\n                const itemProvider = createProductProviderState();\n                const psValueHolder = PsValueProvider.psValueHolder;\n                const loginUserId = psValueHolder.getLoginUserId();\n                const itemId = this.currentMessage.data.item_id;\n                const item = await itemProvider.loadItem(itemId, loginUserId);\n                router.push({\n                    name: 'item',\n                    params: {\n                        itemName: item.data.title.split(' ').join('-').toLowerCase(), \n                    },\n                    query: {\n                        item_id: this.currentMessage.data.item_id,\n                        item_name: item.data.title.split(' ').join('-').toLowerCase()\n                    }\n                });\n               \n            }\n          \n        },\n        receiveMessage() {\n            try {\n                if(!this.messaging) return;\n                this.messaging.onMessage((payload) => {\n                    // debugger\n                    this.currentMessage = payload;\n                    console.log(\"Message received. \", this.currentMessag);\n                   \n                    this.setNotificationBoxForm(\n                        payload.notification.title,\n                        payload.notification.body,\n                        payload.data.flag,\n                    );\n                   \n                    this.notify = true;\n                    setTimeout(() => {\n                        this.notify = false;\n                    }, 10000);\n                });\n\n            } catch (e) {\n                console.log(e);\n            }\n        },\n      \n        setNotificationBoxForm(title, subject, flag) {\n            this.title = title;\n            this.subject = subject;\n            this.flag = flag;\n        },\n    },\n\n    created() {\n        this.receiveMessage();\n    },\n\n    validations: function () {\n        return {};\n    },\n\n    computed: {},\n};\n</script>\n\n<style>\n#notification-box {\n    display: flex;\n    position: absolute;\n    right: 5px;\n    height: 100px;\n    background-color: #fff;\n    z-index: 1;\n    border: 1px dotted black;\n    border-radius: 12px;\n}\n#notification-close {\n    position: absolute;\n    color: #777;\n    font: 14px;\n    right: 10px;\n    text-decoration: none;\n    text-shadow: 0 1px 0 #fff;\n    top: 6px;\n    z-index: 10;\n    cursor: pointer;\n}\n\nimg{\n    width: 50px;\n}\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}