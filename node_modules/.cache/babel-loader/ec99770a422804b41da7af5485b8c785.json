{"ast":null,"code":"// import PsUtils from '@/utils/PsUtils';\nimport PsConst from '@/object/constant/ps_constants';\nimport { defineComponent, ref, onMounted } from \"vue\";\nimport { useUserProviderState } from '@/store/modules/user/UserProvider';\nimport { PsValueProvider } from '@/store/modules/core/PsValueProvider';\nimport { createUserUnReadMessageProviderState } from \"@/store/modules/chat/UserUnReadMessageProvider\";\nimport UserUnReadMessageParameterHolder from '@/object/holder/UserUnReadMessageParameterHolder';\nimport router from '@/router';\nimport Velocity from \"velocity-animate\"; //import $ from \"cash-dom\";\n\nimport PsIcon from '@/components/core/icons/PsIcon.vue';\nimport PsDropdown from '@/components/core/dropdown/PsDropdown.vue';\nimport PsLine from \"@/components/core/line/PsLine.vue\";\nimport PsRouteLink from '@/components/core/link/PsRouteLink.vue';\nimport { useRoute } from \"vue-router\";\nimport PsLabel from \"@/components/core/label/PsLabel.vue\";\nexport default defineComponent({\n  components: {\n    PsIcon,\n    PsDropdown,\n    PsLine,\n    PsRouteLink,\n    PsLabel\n  },\n  props: {\n    topOfPage: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  setup() {\n    const activeMobileMenu = ref(false);\n    const userProvider = useUserProviderState();\n    const messageCount = ref(0);\n    let psValueHolder = PsValueProvider.psValueHolder;\n    const userunreadmsgProvider = createUserUnReadMessageProviderState();\n    const userUnreadHolder = new UserUnReadMessageParameterHolder();\n    userUnreadHolder.userId = psValueHolder.loginUserId;\n\n    if (psValueHolder.isUserLoggedIn()) {\n      loadUser();\n    }\n\n    async function loadUser() {\n      await userProvider.getUser(psValueHolder.loginUserId); // userProfile.value = userProvider.user.data.userProfilePhoto;\n      // console.log(userProfile.value);\n      // console.log(userProvider.user.data);\n    }\n\n    async function loadMessage() {\n      userUnreadHolder.userId = psValueHolder.loginUserId;\n      await userunreadmsgProvider.postUserUnreadMessageCount(userUnreadHolder);\n      messageCount.value = parseInt(userunreadmsgProvider.buyingitemList.data?.buyerUnreadCount) + parseInt(userunreadmsgProvider.buyingitemList.data?.sellerUnreadCount);\n    }\n\n    loadMessage();\n    onMounted(async () => {\n      await loadUser;\n      await loadMessage;\n    });\n\n    function userNameClicked() {\n      PsValueProvider.psValueHolder.loadData();\n      psValueHolder = PsValueProvider.psValueHolder;\n      loadMessage();\n    }\n\n    function gotToHome() {\n      router.push({\n        name: \"dashboard\"\n      });\n    }\n\n    function toggleMobileMenu(bol = true) {\n      if (bol) {\n        activeMobileMenu.value = !activeMobileMenu.value;\n      }\n\n      loadMessage();\n    }\n\n    function enter(el, done) {\n      Velocity(el, \"slideDown\", {\n        duration: 300\n      }, {\n        complete: done\n      });\n    }\n\n    function leave(el, done) {\n      Velocity(el, \"slideUp\", {\n        duration: 300\n      }, {\n        complete: done\n      });\n    }\n\n    function clickLogout() {\n      psValueHolder.logout();\n      router.push({\n        name: \"dashboard\"\n      });\n    }\n\n    const route = useRoute();\n\n    function registerClicked() {\n      if (activeMobileMenu.value) {\n        activeMobileMenu.value = false;\n      }\n\n      let tempParams = {};\n      tempParams = route.query;\n      tempParams['redirect'] = route.name;\n      router.push({\n        name: 'register',\n        query: tempParams,\n        params: route.params\n      });\n    }\n\n    function loginClicked() {\n      if (activeMobileMenu.value) {\n        activeMobileMenu.value = false;\n      }\n\n      let tempParams = {};\n      tempParams = route.query;\n      tempParams['redirect'] = route.name;\n      router.push({\n        name: 'login',\n        query: tempParams,\n        params: route.params\n      });\n    }\n\n    return {\n      messageCount,\n      activeMobileMenu,\n      psValueHolder,\n      userProvider,\n      gotToHome,\n      enter,\n      leave,\n      toggleMobileMenu,\n      clickLogout,\n      loginClicked,\n      userNameClicked,\n      registerClicked,\n      route,\n      PsConst\n    };\n  }\n\n});","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Documents\\SwaggyCars\\carsayara.com\\src\\components\\layouts\\navbar\\PsNavBar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n    <nav class=\"flex flex-col fixed w-full h-16 z-40 bg-background dark:bg-backgroundDark border-b border-secondary-500 dark:border-backgrounDark\" \n        :class=\"topOfPage ? 'mt-8 lg:mt-12' : 'mt-0'\" >\n        <div class=\"flex justify-between items-center content-center my-auto w-mobile sm:w-median lg:w-large mx-auto\">\n            \n            <div class=' flex flex-row w-full rounded-xl'>\n                <div class=\"me-2 w-8 sm:w-10 my-auto\">\n                    <img src=\"@/assets/images/flutter_admotors_logo.png\" @click=\"gotToHome\" alt=\"Navbar logo\" width=\"50px\" height=\"50px\" class=\" rounded:xl w-auto sm:h-10 h-8 cursor-pointer object-cover \"/>                      \n                </div>\n          \n                <div class=\"my-auto font-medium lg:w-40 w-36\"> \n                    <ps-route-link :to=\"{ name: 'dashboard'}\">\n                        <ps-label class='cursor-pointer lg:text-xl font-medium text-lg ' textColor=\"text-secondary-700 dark:text-secondaryDark-white\" > {{ $t(\"ps_nav_bar__ps_admotor\") }} </ps-label>                    \n                    </ps-route-link>\n                    \n                </div>\n                \n            </div>\n\n            <div class=\"hidden sm:flex items-center content-center me-2\">\n                <ps-route-link :to=\"{name: 'item-list', \n                                query: { \n                                    condition_of_item_id: PsConst.NEW_CONDITION_ID, \n                                    item_condition_name: 'New', } }\" > \n                <ps-label class='w-18 lg:w-20  font-medium cursor-pointer text-sm lg:text-base mx-auto'\n                :textColor=\"route.fullPath.startsWith('/item-list?conditionOfItemId='+PsConst.NEW_CONDITION_ID) ? 'text-primary-500 dark:text-primaryDark-accent underline' : 'text-secondary-500 dark:text-secondaryDark-white'\" > \n                    <div class=' items-center'> \n                         {{ $t(\"ps_nav_bar__new_cars\") }} \n                    </div>\n                </ps-label>\n                \n                </ps-route-link>\n            </div>\n            <div class=\"hidden sm:flex items-center content-center me-2\">\n                <ps-route-link :to=\"{name: 'item-list', \n                                query: { \n                                    condition_of_item_id: PsConst.USED_CONDITION_ID, \n                                    item_condition_name: 'Use', } }\" > \n                <ps-label class='w-18 lg:w-20 font-medium text-sm lg:text-base mx-auto text-center cursor-pointer' \n                :textColor=\"route.fullPath.startsWith('/item-list?conditionOfItemId='+PsConst.USED_CONDITION_ID) ? 'text-primary-500 dark:text-primaryDark-accent underline ' : 'text-secondary-500 dark:text-secondaryDark-white '\" >  \n                    <div class=' items-center '> \n                        {{ $t(\"ps_nav_bar__used_cars\") }}\n                    </div>\n                </ps-label>\n                \n                </ps-route-link>\n            </div>\n            <div class=\"hidden sm:flex items-center content-center \">\n                <ps-route-link :to=\"{name: 'blog-list' }\">\n                <ps-label class='w-18 lg:w-20 font-medium text-sm lg:text-base mx-auto text-center cursor-pointer' :textColor=\"route.name =='blog-list' || route.name == 'blog-detail' ? 'text-primary-500 dark:text-primaryDark-accent underline' : 'text-secondary-500 dark:text-secondaryDark-white'\" > \n                    <div class=' items-center '> \n                         {{ $t(\"ps_nav_bar__blog\") }} \n                    </div>\n                </ps-label>\n                \n                </ps-route-link>\n            </div>\n            \n            <div class=\"items-center content-center hidden sm:flex me-4\">\n\n                <div v-if=\"psValueHolder.isUserLoggedIn()\" class=\"flex items-center content-center\">\n\n                    <ps-dropdown align=\"right\" h=\"h-68\" class=' z-50' >\n                        <template #select >\n                            <ps-label @click='userNameClicked'  class='w-18 lg:w-20 font-medium text-sm lg:text-base mx-auto text-center cursor-pointer' \n                            :textColor=\"route.name =='chat-list'|| route.name == 'followers' || route.name == 'following' || route.name == 'favourite' || route.name == 'active-items' || route.name == 'pending-items' || route.name == 'paid-items' || route.name == 'reported-items' || route.name == 'offer-list' || route.name == 'blocked-users' || route.name == 'chat' || route.name == 'limit-ads' || route.name == 'profile' ? 'text-primary-500 dark:text-primaryDark-accent underline' : 'text-secondary-500 dark:text-secondaryDark-white '\" > \n                                <div class=' items-center '> \n                                    {{ $t(\"ps_nav_bar__account\") }} \n                                </div>\n                            </ps-label>\n                        </template>\n                        <template #list >\n                            <div\n                                class=\" bg-primary-000 shadow-xl w-56 z-50\" \n                                role=\"menu\"\n                                aria-orientation=\"vertical\"\n                                aria-labelledby=\"options-menu\">\n                                <div class=\"z-30 absolute\">\n                                    \n                                    <ps-route-link\n                                        textSize=\"text-sm\"\n                                        :to=\"{name: 'profile' }\"> \n                                        <div class=\"w-56  hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark cursor-pointer items-center\"  >\n                                            <ps-label class=\"py-4 px-2 ms-2 font-medium\" textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  > {{ $t(\"ps_nav_bar__profile\") }} </ps-label>                                        \n                                        </div>\n                                    </ps-route-link>\n\n                                    <ps-route-link\n                                        textSize=\"text-sm\"\n                                        :to=\"{name: 'chat-list' }\"> \n                                        <div class=\"w-56 flex flex-row justify-between hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark cursor-pointer items-center\"  >\n                                            <ps-label class=\"flex-grow py-4 px-2 ms-2 font-medium\" textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  > {{ $t(\"ps_nav_bar__message\") }} </ps-label>    \n                                            <div class=\" me-6 p-0.5 text-xxs rounded-full bg-primary-500 dark:bg-primaryDark-accent text-textLight\" v-if=\" messageCount != 0\"> {{ messageCount }}</div>                                    \n                                        </div>\n                                    </ps-route-link>\n\n                                    <ps-route-link\n                                        textSize=\"text-sm\"\n                                        :to=\"{name: 'favourite' }\"> \n                                        <div class=\"w-56 hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark cursor-pointer items-center\"  >\n                                            <ps-label class=\" py-4 px-2 ms-2 font-medium\" textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  > {{ $t(\"ps_nav_bar__favourite\") }} </ps-label>                                        \n                                        </div>\n                                    </ps-route-link>\n\n                                    <ps-route-link\n                                        textSize=\"text-sm\"\n                                        :to=\"{name: 'notification-list' }\"> \n                                        <div class=\"w-56 hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark cursor-pointer items-center\"  >\n                                            <ps-label class=\"py-4 px-2 ms-2 font-medium\" textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  > {{ $t(\"ps_nav_bar__notification\") }} </ps-label>                                        \n                                        </div>\n                                    </ps-route-link>\n\n                                    <ps-line />\n\n                                    <div class=\"w-56 hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark cursor-pointer items-center\" @click=\"clickLogout\"  >\n                                        <ps-label class=\"py-4 px-2 ms-2 font-medium\" textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  > {{ $t(\"ps_nav_bar__logout\") }} </ps-label>                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </template>\n                    </ps-dropdown>\n\n                   \n                </div>\n\n                <div v-else class=\"flex w-18 lg:w-20\">\n                    <div class=\"h-16 flex items-center content-center cursor-pointer \">\n                        <ps-label @click=\"loginClicked\" class='font-medium text-sm lg:text-base mx-auto text-center cursor-pointer ' :textColor=\"route.name =='login' || route.name == 'register' ? 'text-primary-500 dark:text-primaryDark-accent underline' : 'text-secondary-500 dark:text-secondaryDark-white'\" >\n                             {{ $t(\"ps_nav_bar__login\") }} \n                        </ps-label>                       \n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center content-center\">\n                <ps-route-link :to=\"{name: 'item-entry' }\">\n                <ps-label class='hidden sm:block w-24 lg:w-28 px-3 bg-primary-500 dark:bg-primaryDark-accent py-2 font-medium cursor-pointer text-center mx-auto text-xs lg:text-sm ' textColor=\"text-textLight \" > \n                    <div class=' items-center '> \n                         {{ $t(\"ps_nav_bar__new_post\") }} \n                    </div>\n                </ps-label>\n                <ps-label class='me-4 flex sm:hidden px-3 bg-primary-500 dark:bg-primaryDark-accent py-1 font-light cursor-pointer text-2xl ' textColor=\"text-textLight \" > \n                    <div class=' items-center '> \n                        +\n                    </div>\n                </ps-label>\n                \n                </ps-route-link>\n            </div>\n\n            <div class =\"sm:hidden flex h-16 items-center\">\n                <ps-icon name=\"menu\" class=\"cursor-pointer\" @click=\"toggleMobileMenu\" />            \n            </div>\n        </div>\n        <div>\n            <transition @enter=\"enter\" @leave=\"leave\" >\n                <div v-if=\"activeMobileMenu\" class=\" h-auto mt-0 \">\n                <div  class=\"flex flex-col \" >\n                    <div v-if=\"psValueHolder.isUserLoggedIn()\">             \n                        <ps-route-link\n                            textSize=\"text-md\"\n                            :to=\"{name: 'profile' }\"> \n                            <div class=\"w-full  hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark cursor-pointer items-center\" @click=\"toggleMobileMenu\" >\n                                <ps-label class=\"py-4 px-2 ms-2 font-medium\" textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  > {{ $t(\"ps_nav_bar__profile\") }} </ps-label>                                        \n                            </div>\n                        </ps-route-link>\n\n                        <ps-route-link\n                            textSize=\"text-md\"\n                            :to=\"{name: 'chat-list' }\"> \n                            <div class=\"w-full flex flex-row justify-between hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark cursor-pointer items-center\" @click=\"toggleMobileMenu\" >\n                                <ps-label class=\"flex-grow py-4 px-2 ms-2 font-medium\" textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"   > {{ $t(\"ps_nav_bar__message\") }} </ps-label>                                        \n                                <div class=\" me-6 p-0.5 text-xxs rounded-full bg-primary-500 dark:bg-primaryDark-accent text-textLight\" v-if=\" messageCount != 0\"> {{ messageCount }}</div>  \n                            </div>\n                        </ps-route-link>\n\n                        <ps-route-link\n                            textSize=\"text-md\"\n                            :to=\"{name: 'favourite' }\"> \n                            <div class=\"w-full hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark cursor-pointer items-center\"  @click=\"toggleMobileMenu\">\n                                <ps-label class=\"py-4 px-2 ms-2 font-medium\" textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  > {{ $t(\"ps_nav_bar__favourite\") }} </ps-label>                                        \n                            </div>\n                        </ps-route-link>\n\n                        <ps-route-link\n                            textSize=\"text-md\"\n                            :to=\"{name: 'notification-list' }\"> \n                            <div class=\"w-full hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark cursor-pointer items-center\" @click=\"toggleMobileMenu\" >\n                                <ps-label class=\"py-4 px-2 ms-2 font-medium\" textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  > {{ $t(\"ps_nav_bar__notification\") }} </ps-label>                                        \n                            </div>\n                        </ps-route-link>\n\n                        <ps-line textColor=\"text-secondary-400 dark:text-secondaryDark-grey\"/>\n\n                        <div class=\"w-full hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark cursor-pointer items-center\" @click=\"clickLogout\"  >\n                            <ps-label class=\"py-4 px-2 ms-2 font-medium\" textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  > {{ $t(\"ps_nav_bar__logout\") }} </ps-label>                                        \n                        </div>\n                        \n\n                    </div>\n\n                    <div v-else >\n                        <ps-line />\n                        <ps-label  class=' w-full hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark py-4 px-4 cursor-pointer' textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  @click=\"loginClicked\"> {{ $t(\"ps_nav_bar__login\") }} </ps-label>\n                        <ps-label  class=' w-full hover:bg-primary-500 dark:bg-primaryDark-black bg-primary-000 dark:hover:bg-backgroundDark py-4 px-4 cursor-pointer' textColor=\"text-secondary-500 dark:text-secondaryDark-white hover:text-textLight\"  @click=\"registerClicked\"> {{ $t(\"ps_nav_bar__register\") }} </ps-label>\n                    </div>\n                    \n                </div>\n                </div>\n                </transition>\n        </div>\n        \n    </nav>\n</template>\n\n<script>\n// import PsUtils from '@/utils/PsUtils';\nimport PsConst from '@/object/constant/ps_constants';\nimport { defineComponent, ref,onMounted } from \"vue\";\nimport { useUserProviderState } from '@/store/modules/user/UserProvider';\nimport { PsValueProvider } from '@/store/modules/core/PsValueProvider';\nimport { createUserUnReadMessageProviderState } from \"@/store/modules/chat/UserUnReadMessageProvider\";\nimport UserUnReadMessageParameterHolder from '@/object/holder/UserUnReadMessageParameterHolder';\nimport router from '@/router';\nimport Velocity from \"velocity-animate\";\n//import $ from \"cash-dom\";\n\nimport PsIcon from '@/components/core/icons/PsIcon.vue';\nimport PsDropdown from '@/components/core/dropdown/PsDropdown.vue';\nimport PsLine from \"@/components/core/line/PsLine.vue\";\nimport PsRouteLink from '@/components/core/link/PsRouteLink.vue';\nimport { useRoute } from \"vue-router\";\nimport PsLabel from \"@/components/core/label/PsLabel.vue\";\n\nexport default defineComponent ({\n    components : {\n        PsIcon,\n        PsDropdown,\n        PsLine,\n        PsRouteLink,\n        PsLabel\n    },\n    props : {\n        topOfPage : {\n            type: Boolean,\n            default : false\n        }\n    },\n    setup() {\n\n        const activeMobileMenu = ref(false);\n        const userProvider = useUserProviderState();   \n        const messageCount = ref(0);\n        let psValueHolder = PsValueProvider.psValueHolder;\n        const userunreadmsgProvider = createUserUnReadMessageProviderState();\n        const userUnreadHolder = new UserUnReadMessageParameterHolder();\n        userUnreadHolder.userId = psValueHolder.loginUserId;\n\n        if (psValueHolder.isUserLoggedIn()) {               \n            loadUser()\n            \n        }\n        async function loadUser(){\n            await userProvider.getUser(psValueHolder.loginUserId);\n            // userProfile.value = userProvider.user.data.userProfilePhoto;\n            // console.log(userProfile.value);\n            // console.log(userProvider.user.data);\n        }\n        async function loadMessage(){\n            userUnreadHolder.userId = psValueHolder.loginUserId;\n            await userunreadmsgProvider.postUserUnreadMessageCount(userUnreadHolder);\n            messageCount.value = parseInt(userunreadmsgProvider.buyingitemList.data?.buyerUnreadCount) + parseInt(userunreadmsgProvider.buyingitemList.data?.sellerUnreadCount);\n        }\n        loadMessage();\n        onMounted( async () =>{\n          \n            await loadUser;\n            await loadMessage;\n        })\n        \n        function userNameClicked() {\n            PsValueProvider.psValueHolder.loadData();\n            psValueHolder= PsValueProvider.psValueHolder;\n            loadMessage();\n        }\n        \n        function gotToHome() {\n            router.push({name : \"dashboard\"});\n        }\n\n        function toggleMobileMenu( bol = true) {\n            if(bol){\n                activeMobileMenu.value = !activeMobileMenu.value;\n            }\t\n            loadMessage();\t\t\n\t\t}\n\n        function enter(el, done) {\n\t\t\tVelocity(\n\t\t\t\tel,\n\t\t\t\t\"slideDown\",\n\t\t\t\t{\n\t\t\t\tduration: 300\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\tcomplete: done\n\t\t\t\t}\n\t\t\t);\n        }\n        \n\t\tfunction leave(el, done) {\n\t\t\tVelocity(\n\t\t\t\tel,\n\t\t\t\t\"slideUp\",\n\t\t\t\t{\n\t\t\t\tduration: 300\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\tcomplete: done\n\t\t\t\t}\n\t\t\t);\n        }\n\n        function clickLogout() {\n            psValueHolder.logout();\n            router.push({name : \"dashboard\"});\n        }\n        const route = useRoute();\n        function registerClicked() {\n       \n            if(activeMobileMenu.value) {\n                activeMobileMenu.value = false;\n            }\n\n            let tempParams = {};\n            tempParams = route.query;\n            tempParams['redirect'] = route.name;\n            router.push({name : 'register', query : tempParams, params : route.params });\n        } \n        function loginClicked() {\n       \n            if(activeMobileMenu.value) {\n                activeMobileMenu.value = false;\n            }\n\n            let tempParams = {};\n            tempParams = route.query;\n            tempParams['redirect'] = route.name;\n            router.push({name : 'login', query : tempParams, params : route.params });\n        }\n\n        \n        return {\n            messageCount,\n            activeMobileMenu,\n            psValueHolder,\n            userProvider,\n            gotToHome,\n            enter,\n            leave,\n            toggleMobileMenu,\n            clickLogout,\n            loginClicked,\n            userNameClicked,\n            registerClicked,\n            route,\n            PsConst\n        }\n\n    }\n});\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}